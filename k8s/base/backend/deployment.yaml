# This Kubernetes Deployment manifest defines the "backend" application.
# - Deploys 2 replicas of the backend container from the image "ghcr.io/zkvote/backend:latest".
# - Exposes port 3000 for the application.
# - Resource requests and limits are set for CPU and memory to ensure efficient scheduling and resource usage.
# - Includes a liveness probe on the root path ("/") to monitor container health.
# - Environment variables are loaded from the "backend-config" ConfigMap.
# - Security context enforces running as a non-root user (UID 1000), with a read-only root filesystem and privilege escalation disabled.
apiVersion: apps/v1 # API version for the Deployment resource
kind: Deployment # Kind of resource
metadata: # Metadata for the Deployment resource
  name: backend # Name of the Deployment
spec: # Specification for the Deployment resource
  replicas: 2 # Number of replicas to deploy
  selector: # Selector to identify the pods managed by this deployment
    matchLabels: # Match labels to identify the pods
      app: backend # Label to match
  template: # Template for the pods
    metadata: # Metadata for the pod template
      labels: # Labels for the pod template
        app: backend # Label for the pod
    spec: # Specification for the pod
      containers: # List of containers in the pod
        - name: backend # Name of the container
          image: ghcr.io/zkvote/backend:latest # Image for the container
          ports: # Ports to expose from the container
            - containerPort: 3000 # Port to expose
          resources: # Resource requirements for the container
            limits: # Resource limits for the container
              cpu: "0.5" # Maximum CPU usage
              memory: "512Mi" # Maximum memory usage
            requests: # Resource requests for the container
              cpu: "0.1" # Minimum CPU usage
              memory: "128Mi" # Minimum memory usage
          livenessProbe: # Liveness probe for the container which checks if the container is alive
            httpGet: # HTTP GET request for the liveness probe
              path: / # Path to check
              port: 3000 # Port to check
            initialDelaySeconds: 30 # Initial delay before starting the liveness probe
            periodSeconds: 5 # Frequency of the liveness probe
          envFrom: # Environment variables for the container
            - configMapRef: # Reference to the ConfigMap for environment variables
                name: backend-config # Name of the ConfigMap
          securityContext: # Security context for the container
            runAsNonRoot: true # Run the container as a non-root user
            runAsUser: 1000 # User ID to run the container as
            readOnlyRootFilesystem: true # Use a read-only root filesystem
            allowPrivilegeEscalation: false # Disable privilege escalation
